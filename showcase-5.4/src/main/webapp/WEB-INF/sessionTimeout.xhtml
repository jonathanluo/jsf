<?xml version="1.0" encoding="UTF-8" ?>
<!-- 
    timeout
    "600000" milliseconds ==> 10 minutes
    "300000" milliseconds ==> 5 minutes
    "60000"  milliseconds ==> 60 seconds
    "50000"  milliseconds ==> 50 seconds
    "5000"   milliseconds ==> 5 seconds
    "1000"   milliseconds ==> 1 seconds

    http://localhost/showcase-5.4/ui/misc/idleMonitor.xhtml

    http://stackoverflow.com/questions/19097565/alert-when-the-session-expires-with-primefaces
      <p:idleMonitor
         timeout="60000" // should be the difference of session timeout - 10 minutes 
                         // Time to wait in milliseconds until deciding if the user is idle. Default is 5 minutes.

      p:dialog id="timeoutSession"
         header="#{msg['session.expire']}"
-->

<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui">
   <h:form prependId="false">
      <p:growl id="msg" showDetail="true" sticky="true" />

      <p:idleMonitor id="sessionIdleMonitor"
         timeout="${idleMonitorView.getSessionMaxInactiveInterval() * 1000 - 600000}"
         onidle="startIdleMonitor()"
          />
 
      <p:dialog id="timeoutSession"
         header="#{label.warning}"
         widgetVar="timeoutDialog"
         showEffect="fade" hideEffect="fade"
         modal="true"
         width="400"
         height="200"
         closable="false"
         draggable="true"
         resizable="false"
         appendToBody="true"
         onHide="stopCount()"
         onShow="doTimer()">
         <br />
         <p>
            <span class="ui-icon ui-icon-alert" style="float: left; margin: 8px 8px 0;"/>
            <p:panel>
               #{label.session_timeout_1}<br/>
               #{label.session_timeout_2a} <span id="dialog-countdown" style="font-weight: bold"></span> #{label.session_timeout_2b}<br/>
               #{label.session_timeout_3}<br/>
               <br/>
               maxInactiveInterval: ${pageContext.session.maxInactiveInterval}<br/>
            </p:panel>
         </p>
         <p:commandButton id="confirm" value="#{label.yes}" update="msg"
             oncomplete="PF('timeoutDialog').hide()"
             actionListener="#{idleMonitorView.keepSessionAlive}" />

         <p:commandButton id="logout" value="#{label.no}" update="msg"
             oncomplete="PF('timeoutDialog').hide()"
             actionListener="#{userLoginView.logout}" />   <!-- onclick="logout()" not stable, reverted to actionListener -->

      </p:dialog>
      <p:remoteCommand name="keepSessionAlive" actionListener="#{idleMonitorView.keepSessionAlive}"/>
      <p:remoteCommand name="logout"    actionListener="#{userLoginView.logout}"/>
   </h:form>

   <script type="text/javascript">
      var TIME = 10; // in seconds or minutes depends on unit in processTimer = setTimeout("timedCount()", 1000); 
      var countTimer = TIME;
      var processTimer;
      var timer_is_on = 0;
 
      var countDownDiv = "dialog-countdown";
      var txtCountDown = null;
      if (!txtCountDown)
        txtCountDown = document.getElementById(countDownDiv);
 
      function startIdleMonitor() {
        countTimer = TIME;
        txtCountDown.innerHTML = countTimer;
        PF('timeoutDialog').show();
      }
      function timedCount() {
        txtCountDown.innerHTML = countTimer;
        if (countTimer == 5) { // make sure logout works when countTimer == 0
            keepSessionAlive();
        }
        if (countTimer == 0) {
            stopCount();
            PF('timeoutDialog').hide();
            logout();
            return;
        }
        countTimer = countTimer - 1;
        processTimer = setTimeout("timedCount()", 600000); // count down every second, 600000 - one minute 
      }
      function doTimer() {
        if (!timer_is_on) {
            timer_is_on = 1;
            timedCount();
        }
      }
      function stopCount() {
        clearTimeout(processTimer);
        timer_is_on = 0;
      }
      </script>
</ui:composition>
