<?xml version="1.0" encoding="UTF-8" ?>
<!-- 
    timeout
    "600000" milliseconds ==> 10 minutes
    "300000" milliseconds ==> 5 minutes
    "60000"  milliseconds ==> 60 seconds
    "50000"  milliseconds ==> 50 seconds
    "5000"   milliseconds ==> 5 seconds
    "1000"   milliseconds ==> 1 seconds

    http://localhost/showcase-5.4/ui/misc/idleMonitor.xhtml

    http://stackoverflow.com/questions/19097565/alert-when-the-session-expires-with-primefaces
      <p:idleMonitor
         timeout="60000" // should be the difference of session timeout - 10 minutes 
                         // Time to wait in milliseconds until deciding if the user is idle. Default is 5 minutes.


-->

<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui">
    <ui:define name="head">
        <script type="text/javascript">

        </script>
        <style type="text/css">
            .sessionTimeoutButton {
                margin-top: 0px;
                background-color: #9FC5F8;
                border: 1px solid #000000;
                color: #222222;
            }
            .sessionTimeoutButton:hover {
                margin-top: 0px;
                background-color: #00538b;
                color: #ffffff;
                border: 1px solid #000000;
            }
        </style>

    </ui:define>
                
   <h:form prependId="false">
      <p:growl id="msg" showDetail="true" sticky="true" />

      <p:idleMonitor id="sessionIdleMonitor"
         timeout="${session.maxInactiveInterval * 1000 - 600000}"
         onidle="startIdleMonitor()"
          />
 
      <p:dialog id="timeoutSession"
         header="#{label.warning}"
         widgetVar="timeoutDialog"
         showEffect="fade" hideEffect="fade"
         modal="true"
         width="400"
         height="140"
         closable="false"
         draggable="true"
         resizable="false"
         appendToBody="true"
         onHide="stopCount()"
         onShow="startTimer()">
         <br />
         <h:panelGroup style="display:block; text-align:center">
             <p:graphicImage name="main/images/warning_icon.png" style="float: left; margin: 8px 8px 0;" />
                #{label.session_timeout_1}<br/>
                #{label.session_timeout_2a} <span id="lblCountdown" style="font-weight: bold"></span> #{label.session_timeout_2b}<br/>
                #{label.session_timeout_3}<br/>
             <br/><br/>
             <p:commandButton id="confirm" value="#{label.yes}" update="msg"
                  styleClass="sessionTimeoutButton"
                  oncomplete="PF('timeoutDialog').hide()"
                  actionListener="#{idleMonitorView.keepSessionAlive}" />

             <p:commandButton id="logout" value="#{label.no}" update="msg"
                  styleClass="sessionTimeoutButton"
                  oncomplete="PF('timeoutDialog').hide()"
                  actionListener="#{idleMonitorView.logout}" />
        </h:panelGroup>
      </p:dialog>
      <p:remoteCommand name="keepSessionAlive" actionListener="#{idleMonitorView.keepSessionAlive}"/>
      <p:remoteCommand name="logout"    actionListener="#{idleMonitorView.logout}"/>
   </h:form>

   <script type="text/javascript">
      var countDownInterval = 10; // deafult - 60 seconds (one minute), 1 - one second for testing
      var timerUnit = 10; // initial count down value in minutes
      var timerCount = timerUnit;
      var isTimerStarted = false;
      var timerId;
 
      var lblCountDown = null;
      if (!lblCountDown) {
        lblCountDown = document.getElementById("lblCountdown");
      }
 
      function startIdleMonitor() {
        timerCount = timerUnit;
        lblCountDown.innerHTML = timerCount;
        PF('timeoutDialog').show();
      }
      function startTimer() {
        if (!isTimerStarted) {
            isTimerStarted = true;
            timerId = setInterval(countDown, countDownInterval * 1000);
        }
      }
      function countDown() {
        timerCount = timerCount - 1;
        lblCountDown.innerHTML = timerCount;
        if (timerCount == 5) { // make sure logout works when timerCount reaches 0
            keepSessionAlive();
        }
        if (timerCount == 0) {
            stopCount();
            PF('timeoutDialog').hide();
            logout();
            return;
        }
      }
      function stopCount() {
        clearInterval(timerId);
        isTimerStarted = false;
      }
      </script>
</ui:composition>
